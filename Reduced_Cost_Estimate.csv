Group hierarchy,Region,Description,Service,Upfront,Monthly,First 12 months total,Currency,Configuration summary
My Estimate,US East (N. Virginia),,Amazon EC2,0,3226.95,38723.40,USD,"Operating system (Linux), Quantity (50), Pricing strategy (EC2 Instance Savings Plans 1 Year No Upfront), Storage amount (30 GB), Instance type (t4g.xlarge)"
My Estimate,US East (N. Virginia),,Amazon RDS for PostgreSQL,0,2079.8,24957.60,USD,"Storage volume (General Purpose SSD (gp2)), Storage amount (100 GB per month), Nodes (2), Instance Type (db.m2.2xlarge), Utilization (On-Demand only) (100 %Utilized/Month), Deployment Option (Multi-AZ), Pricing Model (OnDemand), Additional backup storage (200 GB)"
My Estimate,US East (N. Virginia),,S3 Standard,0,471.04,5652.48,USD,S3 Standard storage (20 TB per month)
My Estimate,US East (N. Virginia),,Data Transfer,0,0,0.00,USD,"DT Inbound: Internet (100 TB per month), DT Inbound: Not selected (0 TB per month), DT Outbound: Amazon CloudFront (200 TB per month), DT Outbound: Not selected (0 TB per month)"
My Estimate,US East (N. Virginia),,Amazon CloudWatch,0,320,3840.00,USD,Number of other API requests (32000000)
My Estimate,US East (N. Virginia),,Amazon Virtual Private Cloud (VPC),0,0,0.00,USD,"Working days per month (22), DT Inbound: Internet (100 TB per month), DT Inbound: Not selected (0 TB per month), DT Outbound: Amazon CloudFront (100 TB per month), DT Outbound: Not selected (0 TB per month), DT Intra-Region: (0 TB per month)"
My Estimate,US East (N. Virginia),,Application Load Balancer,0,266.45,3197.40,USD,Number of Application Load Balancers (2)
My Estimate,US East (N. Virginia),,Amazon Virtual Private Cloud (VPC),0,110.7,1328.40,USD,Number of NAT Gateways (2)



Acknowledgement
"* AWS Pricing Calculator provides only an estimate of your AWS fees and doesn't include any taxes that might apply. Your actual fees depend on a variety of factors, including your actual usage of AWS services."


With reduced budget the resource that drives large costs per month is the RDS Instance Type (db.m2.4xlarge).
Changing to a less powerful Instance Type (db.m2.2xlarge) reduces the monthly costs to be able to reach budget limits.
Reduce EC2 instance from 60 down to 50, keep the same instance type.
Reduce data stored in S3 buckets to 20 TB per month.
One drawback is that the user requests could cause the DB to become a bottle neck. So maybe it needs to add some caching service to try to limit DB query operations.